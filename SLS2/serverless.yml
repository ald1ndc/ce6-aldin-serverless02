# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: aldin
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: sls2-app
# "service" is the name of this project. This will also be added to your AWS resource names.
service: SLS2

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-1

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
      - sqs:
          arn: arn:aws:sqs:ap-southeast-1:255945442255:AldinQueue
          batchSize: 10
          maximumBatchingWindow: 60
          functionResponseType: ReportBatchItemFailures
#      - sqs :
#          arn:
#          Fn: GetAtt:
#           - AldinQueue2
#           - Arn

resources:
  Resources:
    MyQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "AldinQueue2"
    SuperTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "MyCustomTopic"

functions:
  hello2:
    handler: handler.hello2
    events:
      - s3:
          bucket: ce6-aldin-lambda-fn2
          event: s3:ObjectCreated:*
      - s3:
          bucket: ce6-aldin-lambda-fn2
          event: s3:ObjectRemoved:*  
#      - sqs:
#          arn: arn:aws:sqs:ap-southeast-1:255945442255:AldinQueue
#          batchSize: 10
#          maximumBatchingWindow: 60
#          functionResponseType: ReportBatchItemFailures

functions:
  hello3:
    handler: handler.hello3
    events:
      - httpApi:
          path: /hello3
          method: get
      - sns:
          arn: !Ref Topic
          topicName: MyCustomTopic
          
#reference this https://www.serverless.com/framework/docs/providers/aws/events/sns

plugins:
  - serverless-offline

